// pages/index.tsx

import React, { useState } from 'react';

export default function Home() {
  const [title, setTitle] = useState('');
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState('');

  const handleGenerate = async () => {
    if (!title.trim()) return;
    setLoading(true);
    setResult('');
    try {
      const res = await fetch('/api/generate', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title }),
      });
      const data = await res.json();
      if (data?.script) {
        setResult(data.script); // 응답이 정리된 형태면 여기에 출력
      } else {
        setResult(JSON.stringify(data, null, 2));
      }
    } catch (err: any) {
      setResult(`에러 발생: ${err.message}`);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={styles.container}>
      <h1 style={styles.heading}>🎬 ShortsAutoMaker</h1>
      <p style={styles.description}>전래동화 제목을 입력하면 AI가 자동으로 영상 대본과 자료를 생성해요.</p>
      <input
        style={styles.input}
        type="text"
        placeholder="예: 팥죽 할머니와 호랑이"
        value={title}
        onChange={(e) => setTitle(e.target.value)}
      />
      <button style={styles.button} onClick={handleGenerate} disabled={loading}>
        {loading ? '⏳ 생성 중...' : '🎥 Generate'}
      </button>
      {result && (
        <pre style={styles.result}>
          {result}
        </pre>
      )}
    </div>
  );
}

const styles = {
  container: {
    fontFamily: 'sans-serif',
    maxWidth: '500px',
    margin: '50px auto',
    padding: '20px',
    textAlign: 'center' as const,
    backgroundColor: '#f9f9f9',
    borderRadius: '10px',
    boxShadow: '0 2px 10px rgba(0,0,0,0.1)',
  },
  heading: {
    fontSize: '1.8rem',
    marginBottom: '10px',
  },
  description: {
    color: '#666',
    fontSize: '0.95rem',
    marginBottom: '20px',
  },
  input: {
    padding: '12px',
    fontSize: '1rem',
    width: '100%',
    marginBottom: '10px',
    borderRadius: '6px',
    border: '1px solid #ccc',
  },
  button: {
    padding: '12px 24px',
    fontSize: '1rem',
    borderRadius: '6px',
    border: 'none',
    backgroundColor: '#0070f3',
    color: '#fff',
    cursor: 'pointer',
  },
  result: {
    marginTop: '30px',
    textAlign: 'left' as const,
    backgroundColor: '#fff',
    padding: '10px',
    borderRadius: '6px',
    whiteSpace: 'pre-wrap' as const,
    fontSize: '0.9rem',
  }
};
